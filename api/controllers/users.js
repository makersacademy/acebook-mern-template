const User = require("../models/user");
const { validateEmail, validatePassword } = require("../helpers/validation");
const multer = require("multer");

// Configure multer storage
//multer disk storage is used to configure the destination directory and the filename of the uploaded file
const storage = multer.diskStorage({
  destination: (req, file, cb) => {
    // Specify the destination directory to save the uploaded avatar images
    cb(null, "avatars");
  },
  filename: (req, file, cb) => {
    // Generate a unique filename for the uploaded file
    //
    const uniqueSuffix = Date.now() + "-" + Math.round(Math.random() * 1e9);
    const fileExtension = file.originalname.split(".").pop();
    cb(null, "avatar-" + uniqueSuffix + "." + fileExtension);
  },
});

// Create multer upload instance
const upload = multer({ storage: storage });

const UsersController = {
  Create: (req, res) => {
    upload.single("avatar")(req, res, (err) => {
      if (err instanceof multer.MulterError) {
        res.status(500).json({
          message: "Error uploading avatar image",
        });
      } else if (err) {
        res.status(500).json({
          message: "Error processing request",
        });
      } else {
        const user = new User(req.body);
        if (!validateEmail(user.email)) {
          res.status(400).json({
            message: "Invalid email address!",
          });
        } else if (!validatePassword(user.password)) {
          res.status(400).json({
            message: "Invalid password!",
          });
        } else {
          User.findOne({ email: user.email }).then((check) => {
            if (check) {
              res.status(400).json({
                message: "This Email is already in use!",
              });
            } else {
              if (req.file) {
                console.log("FILEEE", req.file);
                // req.protocol returns the protocol used (http), so we can use it to construct the full URL
                // req.file.filename contains the filename generated by multer
                //req.get("host") returns the host name of the server eg. localhost:3000
                user.avatar = `${req.protocol}://${req.get("host")}/avatars/${
                  // req.file.filename contains the filename generated by multer
                  req.file.filename
                }`;
              }
              //savedUser is the user that was saved in the database
              user.save((err, savedUser) => {

                if (err) {
                  res.status(400).json({ message: "Bad request" });
                } else {
                  res.status(201).json({ message: "OK" });
                }
              });
            }
          });
        }
      }
    });
  },
};

module.exports = UsersController;
